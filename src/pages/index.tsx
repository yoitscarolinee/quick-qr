import Head from 'next/head';
import { QRCodeCanvas } from 'qrcode.react';
import { useState } from 'react';
import styled from 'styled-components';

const Wrapper = styled.div`
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  gap: 36px;
`;

const Input = styled.input`
  padding: 10px 16px;
  border-radius: var(--border-radius);
  border: 2px solid rgba(var(--main), 1);
  background-color: transparent;
  color: rgba(var(--white), 0.5);
  min-width: 250px;
  height: 40px;
  font-size: 16px;
  font-weight: var(--font-weight-regular);

  &:focus {
    outline: none;
  }

`;

const Button = styled.button`
  background-color: rgba(var(--main), 1);
  border-radius: var(--border-radius);
  border: none;
  outline: none;
  font-weight: var(--font-weight-regular);
  color: rgba(var(--white), 1);
  padding: 5px 32px;
  font-size: 16px;
  cursor: pointer;
`

export default function Home(): JSX.Element {
  const [valorInput, setValorInput] = useState<string>('');

  function downloadCanvas(): void {
    const canvas = document.getElementById('myCanvas') as HTMLCanvasElement;
    const image = canvas.toDataURL('image/png').replace('image/png', 'image/octet-stream');
    const link = document.createElement('a');
    link.download = 'imagem.png';
    link.href = image;
    link.click();
  }

  return (
    <>
      <Head>
        <title>QuickQR</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Wrapper>
        <Input type="text" placeholder="Generate a Quick QR code" value={valorInput} onChange={(event) => setValorInput(event.target.value)} />
        <QRCodeCanvas id='myCanvas' value={valorInput} />
        <Button onClick={downloadCanvas}>Download</Button>
      </Wrapper>
    </>
  );
}